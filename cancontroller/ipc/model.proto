syntax = "proto3";

//
// python3 -m grpc_tools.protoc -Icancontroller/ipc --python_out=cancontroller/ipc --grpc_python_out=cancontroller/ipc model.proto
//

package cancontroller.ipc;

service CanController {
  rpc SendGarage(GarageCommand) returns (GarageResponse) {}

  rpc ReadAttribute(AttributeRequest) returns (AttributeResponse) {}
  rpc WriteAttribute(AttributeRequest) returns (AttributeResponse) {}

  rpc GetDevices(Empty) returns (Devices) {}
  rpc GetDevice(DeviceId) returns (Device) {}
}

/*____________________________________________________________________________________________________________________*/

message DeviceId
{
  uint32 type = 1;
  uint32 id = 2;
}

enum Status {
  OK = 0;
  NOK = 1;
  TIMEOUT = 2;
}

/*____________________________________________________________________________________________________________________*/

enum Command {
  COMMAND_UNSPECIFIED = 0;
  COMMAND_LEFT = 1;
  COMMAND_RIGHT = 2;
  COMMAND_ALL = 3;
}

message GarageCommand {
  string datetime = 1;

  Command command = 2;
}

message GarageResponse {
  string datetime = 1;

  Status status = 4;
}

/*____________________________________________________________________________________________________________________*/


message AttributeRequest {
  DeviceId device = 2;
  uint32 key = 3;
  uint32 value = 4;

  float timeout = 5;  // if timeout == 0.0 then return immediately with status OK
  // if timeout != 0.0 return status TIMEOUT if timeout value exceeded
  // return pending ok if value == write value with WriteAttribute and check key anywhere
}

message AttributeResponse {
  DeviceId device = 1;
  uint32 key = 2;
  uint32 value = 3;

  Status status = 4;

  float response_time = 5;
}

/*____________________________________________________________________________________________________________________*/

message Empty {

}

message DateTime
{
  uint32 year = 1;
  uint32 month = 2;
  uint32 day = 3;

  uint32 hour = 4;
  uint32 minute = 5;
  uint32 second = 6;

  string iso = 7;
  string formatted = 9;
}

message Device {
  DeviceId deviceid = 1;
  string name = 2;
  uint32 version = 3;

  message Status {
    DateTime last_seen = 1;
    uint32 received = 2;
    uint32 sent = 3;
  }
  Status status = 4;

  repeated int32 raw = 5 [packed=true];

  oneof model {
    GarageDoorModel garage = 6;
  }
}

message DeviceResponse {
  oneof dev {
    Device device = 1;
    Empty empty = 2;
  }
}

message GarageDoorModel {
  bool left = 1;
  bool right = 2;
  bool gate = 3;
  bool in0 = 4;
  float temp0 = 5;
  uint32 analog0 = 6;
  uint32 analog1 = 7;
  uint32 analog2 = 8;
}

message Devices {
  repeated Device device = 1;
}