# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

import model_pb2 as model__pb2


class CanControllerStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.SendGarage = channel.unary_unary(
                '/cancontroller.ipc.CanController/SendGarage',
                request_serializer=model__pb2.GarageCommand.SerializeToString,
                response_deserializer=model__pb2.CommandResponse.FromString,
                )
        self.RequestTelemetry = channel.unary_unary(
                '/cancontroller.ipc.CanController/RequestTelemetry',
                request_serializer=model__pb2.DeviceId.SerializeToString,
                response_deserializer=model__pb2.Empty.FromString,
                )
        self.CommandDevice = channel.unary_unary(
                '/cancontroller.ipc.CanController/CommandDevice',
                request_serializer=model__pb2.BoardLevelCommand.SerializeToString,
                response_deserializer=model__pb2.CommandResponse.FromString,
                )
        self.ReadAttribute = channel.unary_unary(
                '/cancontroller.ipc.CanController/ReadAttribute',
                request_serializer=model__pb2.AttributeRequest.SerializeToString,
                response_deserializer=model__pb2.AttributeResponse.FromString,
                )
        self.WriteAttribute = channel.unary_unary(
                '/cancontroller.ipc.CanController/WriteAttribute',
                request_serializer=model__pb2.AttributeRequest.SerializeToString,
                response_deserializer=model__pb2.AttributeResponse.FromString,
                )
        self.Reset = channel.unary_unary(
                '/cancontroller.ipc.CanController/Reset',
                request_serializer=model__pb2.DeviceId.SerializeToString,
                response_deserializer=model__pb2.CommandResponse.FromString,
                )
        self.GetDevices = channel.unary_unary(
                '/cancontroller.ipc.CanController/GetDevices',
                request_serializer=model__pb2.Empty.SerializeToString,
                response_deserializer=model__pb2.Devices.FromString,
                )
        self.GetDevice = channel.unary_unary(
                '/cancontroller.ipc.CanController/GetDevice',
                request_serializer=model__pb2.DeviceId.SerializeToString,
                response_deserializer=model__pb2.Device.FromString,
                )


class CanControllerServicer(object):
    """Missing associated documentation comment in .proto file."""

    def SendGarage(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def RequestTelemetry(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CommandDevice(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ReadAttribute(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def WriteAttribute(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Reset(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetDevices(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetDevice(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_CanControllerServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'SendGarage': grpc.unary_unary_rpc_method_handler(
                    servicer.SendGarage,
                    request_deserializer=model__pb2.GarageCommand.FromString,
                    response_serializer=model__pb2.CommandResponse.SerializeToString,
            ),
            'RequestTelemetry': grpc.unary_unary_rpc_method_handler(
                    servicer.RequestTelemetry,
                    request_deserializer=model__pb2.DeviceId.FromString,
                    response_serializer=model__pb2.Empty.SerializeToString,
            ),
            'CommandDevice': grpc.unary_unary_rpc_method_handler(
                    servicer.CommandDevice,
                    request_deserializer=model__pb2.BoardLevelCommand.FromString,
                    response_serializer=model__pb2.CommandResponse.SerializeToString,
            ),
            'ReadAttribute': grpc.unary_unary_rpc_method_handler(
                    servicer.ReadAttribute,
                    request_deserializer=model__pb2.AttributeRequest.FromString,
                    response_serializer=model__pb2.AttributeResponse.SerializeToString,
            ),
            'WriteAttribute': grpc.unary_unary_rpc_method_handler(
                    servicer.WriteAttribute,
                    request_deserializer=model__pb2.AttributeRequest.FromString,
                    response_serializer=model__pb2.AttributeResponse.SerializeToString,
            ),
            'Reset': grpc.unary_unary_rpc_method_handler(
                    servicer.Reset,
                    request_deserializer=model__pb2.DeviceId.FromString,
                    response_serializer=model__pb2.CommandResponse.SerializeToString,
            ),
            'GetDevices': grpc.unary_unary_rpc_method_handler(
                    servicer.GetDevices,
                    request_deserializer=model__pb2.Empty.FromString,
                    response_serializer=model__pb2.Devices.SerializeToString,
            ),
            'GetDevice': grpc.unary_unary_rpc_method_handler(
                    servicer.GetDevice,
                    request_deserializer=model__pb2.DeviceId.FromString,
                    response_serializer=model__pb2.Device.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'cancontroller.ipc.CanController', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class CanController(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def SendGarage(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/cancontroller.ipc.CanController/SendGarage',
            model__pb2.GarageCommand.SerializeToString,
            model__pb2.CommandResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def RequestTelemetry(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/cancontroller.ipc.CanController/RequestTelemetry',
            model__pb2.DeviceId.SerializeToString,
            model__pb2.Empty.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def CommandDevice(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/cancontroller.ipc.CanController/CommandDevice',
            model__pb2.BoardLevelCommand.SerializeToString,
            model__pb2.CommandResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ReadAttribute(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/cancontroller.ipc.CanController/ReadAttribute',
            model__pb2.AttributeRequest.SerializeToString,
            model__pb2.AttributeResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def WriteAttribute(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/cancontroller.ipc.CanController/WriteAttribute',
            model__pb2.AttributeRequest.SerializeToString,
            model__pb2.AttributeResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Reset(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/cancontroller.ipc.CanController/Reset',
            model__pb2.DeviceId.SerializeToString,
            model__pb2.CommandResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetDevices(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/cancontroller.ipc.CanController/GetDevices',
            model__pb2.Empty.SerializeToString,
            model__pb2.Devices.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetDevice(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/cancontroller.ipc.CanController/GetDevice',
            model__pb2.DeviceId.SerializeToString,
            model__pb2.Device.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
